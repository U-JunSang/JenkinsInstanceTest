<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-4.2.xsd">

	<context:component-scan base-package="com.min.edu"/>
	<mvc:annotation-driven/>
<!-- Security컨트롤러 -->
<bean id="securityController" class="com.min.edu.ctrl.SecurityController"/>

	<security:http auto-config="true" pattern="/admin/**" use-expressions="true">
		<security:access-denied-handler error-page="/admin/AuthError.do"/>
		<security:intercept-url pattern="/admin/loginPage.do" access="permitAll"/>
		<security:intercept-url pattern="/admin/**" access="hasRole('Admin')"/>
		<security:intercept-url pattern="/user/**" access="hasRole('User')"/>
		<security:intercept-url pattern="/**" access="permitAll"/>
<!-- 		login-processing-url="/logingo.do"  -->

		<!-- 
			1로그인 컨트롤러가 로그인 처리를 해주도록 하는 요청 이름 
			2DelegateFilterChian 을 통해 첫페이지를 만들어주는 요청 이름
			3로그인이 성공 시 이동할 페이지 요청 이름
			4.로그인 페이지에서 받아올 username 의 name 값
			5.로그인 실패 시 이동하는 페이지 요청의 이름
			https://bit.ly/3wpscRZ 사용자 비밀번호 검사
		-->
		<security:form-login 
		login-processing-url="/admin/logingo.do" 
		login-page="/admin/loginPage.do" 
		default-target-url="/admin/result.do"
		username-parameter="id"
		password-parameter="password"
		authentication-failure-url="/admin/loginPage.do?error"
		always-use-default-target="true"/>
		
		
		<!-- 
		  1세션을 삭제할 것인지
		  2로그아웃 요청 이름
		  3로그아웃이 성공할 때의 요청 이름, 삭제될 쿠키 : JSESSION - 브라우저가 갖고있는 기본 세션, JSESSIONID,SPRING_SECURITY_REMEMBER_ME_COOKIE" : 로그인 시 생성된 쿠키
		 -->
		<security:logout invalidate-session="true" 
		logout-url="/admin/logout.do" 
		logout-success-url="/admin/loginPage.do?logout" delete-cookies="JSESSIONID,SPRING_SECURITY_REMEMBER_ME_COOKIE"/>
		
		<!-- 
		  세션이 유지되는 시간(초) : 기본 - 2주 3600(60초*60) = 한시간
		  기본 설정된 REMEBER-ME 파라미터 이름
		 -->
		<security:remember-me key="nobrand" 
		token-validity-seconds="3600" 
		remember-me-parameter="remember-me"
		/>
		
		<!-- 
		  토큰 : 나라는 것을 기억하도록 발급해주는 애
		  사용하지 않도록 설정 : true	
		 -->
		<security:csrf disabled="true"/>
		
		
		<!-- 
			세션이 지워지면 이동할 페이지의 요청 이름
			최대로 유지되는 세션의 갯수 / 
			세션이 중복될 경우 이동할 페이지 요청 이름 / 
			로그인이 중복되었을 때 새로운 세션으로 교체하려면  false 
			기존 세션을 유지하려면 true
		 -->
		<security:session-management invalid-session-url="/admin/loginPage.do">
			<security:concurrency-control max-sessions="1" 
			expired-url="/admin/duplicateLogin.do" error-if-maximum-exceeded="false"/>
		</security:session-management>
		
	</security:http>

<!-- /////////////////////////////////  user  ////////////////////////////////////// -->
<bean id="userAuthProvider"	class="com.min.edu.ctrl.UserAuthService" />
	<security:authentication-manager	id="userAuthManager">
		<security:authentication-provider 	ref="userAuthProvider" />
	</security:authentication-manager>
	
	
<security:http auto-config="true" pattern="/user/**" use-expressions="true" authentication-manager-ref="userAuthManager">
		<security:access-denied-handler error-page="/user/AuthError.do"/>
		<security:intercept-url pattern="/user/loginPage.do" access="permitAll"/>
		<security:intercept-url pattern="/user/**" access="hasRole('User')"/>
<!-- 		<security:intercept-url pattern="/**" access="permitAll"/> -->
<!-- 		login-processing-url="/logingo.do"  -->

		<!-- 
			1로그인 컨트롤러가 로그인 처리를 해주도록 하는 요청 이름 
			2DelegateFilterChian 을 통해 첫페이지를 만들어주는 요청 이름
			3로그인이 성공 시 이동할 페이지 요청 이름
			4.로그인 페이지에서 받아올 username 의 name 값
			5.로그인 실패 시 이동하는 페이지 요청의 이름
			https://bit.ly/3wpscRZ 사용자 비밀번호 검사
		-->
		<security:form-login 
		login-processing-url="/user/logingo.do" 
		login-page="/user/loginPage.do" 
		default-target-url="/user/result.do"
		username-parameter="id"
		password-parameter="password"
		authentication-failure-url="/user/loginPage.do?error"
		always-use-default-target="true"/>
		
		
		<!-- 
		  1세션을 삭제할 것인지
		  2로그아웃 요청 이름
		  3로그아웃이 성공할 때의 요청 이름, 삭제될 쿠키 : JSESSION - 브라우저가 갖고있는 기본 세션, JSESSIONID,SPRING_SECURITY_REMEMBER_ME_COOKIE" : 로그인 시 생성된 쿠키
		 -->
		<security:logout invalidate-session="true" 
		logout-url="/user/logout.do" 
		logout-success-url="/user/loginPage.do?logout" delete-cookies="JSESSIONID,SPRING_SECURITY_REMEMBER_ME_COOKIE"/>
		
		<!-- 
		  세션이 유지되는 시간(초) : 기본 - 2주 3600(60초*60) = 한시간
		  기본 설정된 REMEBER-ME 파라미터 이름
		 -->
		<security:remember-me key="nobrand" 
		token-validity-seconds="3600" 
		remember-me-parameter="remember-me"
		/>
		
		<!-- 
		  토큰 : 나라는 것을 기억하도록 발급해주는 애
		  사용하지 않도록 설정 : true	
		 -->
		<security:csrf disabled="true"/>
		
		
		<!-- 
			세션이 지워지면 이동할 페이지의 요청 이름
			최대로 유지되는 세션의 갯수 / 
			세션이 중복될 경우 이동할 페이지 요청 이름 / 
			로그인이 중복되었을 때 새로운 세션으로 교체하려면  false 
			기존 세션을 유지하려면 true
		 -->
		<security:session-management invalid-session-url="/user/loginPage.do">
			<security:concurrency-control max-sessions="1" 
			expired-url="/user/duplicateLogin.do" error-if-maximum-exceeded="false"/>
		</security:session-management>
		
	</security:http>


<!-- 암호화 -->
<bean id="passwordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" /> 

<security:authentication-manager>
	<security:authentication-provider user-service-ref="securityController" >
<!-- 		<security:password-encoder ref="passwordEncoder" /> -->
	</security:authentication-provider>	
</security:authentication-manager>	


</beans>
